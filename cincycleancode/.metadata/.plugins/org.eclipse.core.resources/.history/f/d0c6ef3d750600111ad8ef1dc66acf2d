package org.codingdojo.roman.numeral.converter;

import org.codingdojo.roman.numeral.type.DigitBoundaryType;


public class Converter implements Convertable<Integer, String> {
	
	public String toNumeral(Integer digit){
		StringBuilder numeral = new StringBuilder();
		DigitBoundaryType type = DigitBoundaryType.findType(digit);
		int numberOfSymbols = 0;
		if (type.isMinimum(digit)){
			numeral.append(type.getPreviousSymbol());
			numberOfSymbols = type.getMinLimit() + 1;
		} else {
			if (type.getValue() == 1){
				numberOfSymbols = digit;
			} else {
				numberOfSymbols = digit%type.getValue();
			}
		}
		
		for (int i = 0; i < numberOfSymbols; i++){
			numeral.append(type.getSymbol());
		}
		return numeral.toString();
	}

}
